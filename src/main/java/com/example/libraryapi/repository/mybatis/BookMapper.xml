<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.libraryapi.repository.mybatis.BookMapper">

    <!-- BookクラスとBOOKテーブルをマッピングする-->
    <resultMap id="Book" type="com.example.libraryapi.domain.Book">
        <id property="bookId" column="id"/>
        <result property="bookTitle" column="title"/>
    </resultMap>


    <!-- Book名で検索-->
    <!-- Book名がnullの場合、全件検索-->
    <select id="find" resultMap="Book">
        SELECT ID, TITLE, PAGES, CONTENT FROM BOOK
        <where>
            <if test="bookTitle != null">
                TITLE LIKE CONCAT('%',#{bookTitle},'%')
            </if>
        </where>
        ORDER BY ID ASC
    </select>

    <select id="get" resultMap="Book">
        SELECT ID, TITLE, PAGES, CONTENT
        FROM BOOK
        WHERE ID = #{bookId}
    </select>

    <select id="lock" resultMap="Book">
        SELECT ID, TITLE, PAGES, CONTENT
        FROM BOOK
        WHERE ID = #{bookId}
            FOR UPDATE
    </select>

    <insert id="add">-- TODO:parameterTypeとkeyPropertyを追加
    INSERT INTO BOOK (title, bookPages, bookContent)
    VALUES (#{bookTitle}, #{bookPages}, #{bookContent})
    </insert>

    <update id="set">-- TODO:parameterTypeを追加
        UPDATE BOOK
        <set>
            <if test="bookTitle != null">
                TITLE = #{bookTitle},
            </if>
            <if test="bookPages != null">
                PAGES = #{bookPages},
            </if>
            <if test="bookContent != null">
                CONTENT = #{bookContent},
            </if>
        </set>
        WHERE ID = #{bookId}
    </update>

    <delete id="remove">
        DELETE
        FROM BOOK
        WHERE ID = #{bookId}
    </delete>
</mapper>